{"mappings":"AAAA,4CAA4C;AAC5C,sBAAsB;AACtB,MAAM,kBAAkB,SAAS,cAAc;AAE/C,MAAM,UAAU,SAAU,CAAC;IACzB,OAAO,IAAI,QAAQ,SAAU,CAAC,EAAE,MAAM;QACpC,WAAW;YACT,OAAO,IAAI,MAAM,CAAC,qCAAqC,EAAE,EAAE,OAAO,CAAC;QACrE,GAAG,IAAI;IACT;AACF;AAEA,MAAM,iBAAiB;IACnB,IAAI;QACF,MAAM,KAAK,OAAO,SAAS,KAAK,MAAM;QAEtC,IAAI,CAAC,IAAI;QACT,WAAW;QAEX,wDAAwD;QACxD,YAAY,OAAO,MAAM;QAEzB,6BAA6B;QAC7B,cAAc,OAAO,MAAM,MAAM;QAEjC,oBAAoB;QACpB,MAAM,MAAM,WAAW;QAEvB,sBAAsB;QACtB,WAAW,OAAO,MAAM,MAAM;IAChC,EAAE,OAAO,KAAK;QACZ,WAAW;QACX,QAAQ,MAAM;IAChB;AACF;AACF,uCAAuC;AAEvC,uCAAuC;AACvC,MAAM,aAAa;IACf,IAAG;QACH,MAAM,MAAO,MAAM,MACf,8EAA8E;QAC9E;QAEA,MAAM,OAAO,MAAM,IAAI;QACvB,IAAG,CAAC,IAAI,IAAI,MAAM,IAAI,MAAM,CAAC,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI,OAAO,CAAC,CAAC;QAC7D,QAAQ,IAAI,KAAK;QACjB,IAAI,SAAS,KAAK,KAAK;QACvB,SAAQ;YACJ,IAAI,OAAO;YACX,OAAO,OAAO;YACd,UAAU,OAAO;YACjB,WAAW,OAAO;YAClB,WAAW,OAAO;YAClB,OAAO,OAAO;YACd,aAAa,OAAO;YACpB,aAAa,OAAO;QACxB;QACA,QAAQ,IAAI;QACZ,MAAM,SAAS,CAAC;;oBAEJ,EAAE,OAAO,MAAM,OAAO,EAAE,OAAO,MAAM;;kBAEvC,EAAE,OAAO,MAAM;;;;;;;;;uEASsC,EAAE,OAAO,YAAY;;;;;;;;4CAQhD,EAAE,OAAO,SAAS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UA+BpD,EAAE,OAAO,YAAY,IAAI,CAAA;YACvB,OAAO,CAAC;;;;;0CAKsB,EAAE,IAAI,SAAS;;yCAEhB,EAAE,IAAI,KAAK;cACtC,EAAE,IAAI,YAAY;;;YAGpB,CAAC;QACH,GAAG,KAAK,IAAI;;;;;;;;;;;;;;;;;;;4CAmBsB,EAAE,OAAO,UAAU;;;;;kBAK7C,EAAE,OAAO,UAAU;;;;;;;;;;QAU7B,CAAC;QACD,gBAAgB,YAAY;QAC5B,gBAAgB,mBAAmB,cAAc;IAErD,EAAE,OAAO,KAAI;QACT,MAAM;IACV;AACJ;AACA;AAGA,QAAQ,IAAI,CAAC,KAAK,CAAC","sources":["src/js/controller.js"],"sourcesContent":["// import icons from 'url:../img/icons.svg';\n// console.log(icons);\nconst recipeContainer = document.querySelector('.recipe');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\nconst controlRecipes = async function () {\n    try {\n      const id = window.location.hash.slice(1);\n  \n      if (!id) return;\n      recipeView.renderSpinner();\n  \n      // 0) Update results view to mark selected search result\n      resultsView.update(model.getSearchResultsPage());\n  \n      // 1) Updating bookmarks view\n      bookmarksView.update(model.state.bookmarks);\n  \n      // 2) Loading recipe\n      await model.loadRecipe(id);\n  \n      // 3) Rendering recipe\n      recipeView.render(model.state.recipe);\n    } catch (err) {\n      recipeView.renderError();\n      console.error(err);\n    }\n  };\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nconst showRecipe = async function(){\n    try{\n    const res =  await fetch(\n        // 'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bca3b'\n        'https://forkify-api.herokuapp.com/api/v2/recipes/5ed6604591c37cdc054bc886'\n        );\n        const data = await res.json();\n        if(!res.ok) throw new Error(`${data.message} (${res.status})`);\n        console.log(res, data);\n        let recipe = data.data.recipe;\n        recipe= {\n            id: recipe.id,\n            title: recipe.title,\n            servings: recipe.servings,\n            publisher: recipe.publisher,\n            sourceurl: recipe.source_url,\n            image: recipe.image_url,\n            cookingTime: recipe.cooking_time,\n            ingredients: recipe.ingredients,\n        };\n        console.log(recipe);\n        const markup = `\n        <figure class=\"recipe__fig\">\n          <img src=\"${recipe.image}\" alt=\"${recipe.title}\" class=\"recipe__img\" />\n          <h1 class=\"recipe__title\">\n            <span>${recipe.title}</span>\n          </h1>\n        </figure>\n\n        <div class=\"recipe__details\">\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-clock\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--minutes\">${recipe.cookingTime}</span>\n            <span class=\"recipe__info-text\">minutes</span>\n          </div>\n          <div class=\"recipe__info\">\n            <svg class=\"recipe__info-icon\">\n              <use href=\"src/img/icons.svg#icon-users\"></use>\n            </svg>\n            <span class=\"recipe__info-data recipe__info-data--people\">4</span>\n            <span class=\"recipe__info-text\">${recipe.servings}</span>\n\n            <div class=\"recipe__info-buttons\">\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-minus-circle\"></use>\n                </svg>\n              </button>\n              <button class=\"btn--tiny btn--increase-servings\">\n                <svg>\n                  <use href=\"src/img/icons.svg#icon-plus-circle\"></use>\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          <div class=\"recipe__user-generated\">\n            <svg>\n              <use href=\"src/img/icons.svg#icon-user\"></use>\n            </svg>\n          </div>\n          <button class=\"btn--round\">\n            <svg class=\"\">\n              <use href=\"src/img/icons.svg#icon-bookmark-fill\"></use>\n            </svg>\n          </button>\n        </div>\n\n        <div class=\"recipe__ingredients\">\n          <h2 class=\"heading--2\">Recipe ingredients</h2>\n          <ul class=\"recipe__ingredient-list\">\n          ${recipe.ingredients.map(ing => {\n            return `\n            <li class=\"recipe__ingredient\">\n            <svg class=\"recipe__icon\">\n              <use href=\"src/img/icons.svg#icon-check\"></use>\n            </svg>\n            <div class=\"recipe__quantity\">${ing.quantity}</div>\n            <div class=\"recipe__description\">\n              <span class=\"recipe__unit\">${ing.unit}</span>\n              ${ing.description}\n            </div>\n          </li>\n            `;\n          }).join('')}\n            <li class=\"recipe__ingredient\">\n              <svg class=\"recipe__icon\">\n                <use href=\"src/img/icons.svg#icon-check\"></use>\n              </svg>\n              <div class=\"recipe__quantity\">1000</div>\n              <div class=\"recipe__description\">\n                <span class=\"recipe__unit\">g</span>\n                pasta\n              </div>\n            </li>\n\n           \n        </div>\n\n        <div class=\"recipe__directions\">\n          <h2 class=\"heading--2\">How to cook it</h2>\n          <p class=\"recipe__directions-text\">\n            This recipe was carefully designed and tested by\n            <span class=\"recipe__publisher\">${recipe.publisher}</span>. Please check out\n            directions at their website.\n          </p>\n          <a\n            class=\"btn--small recipe__btn\"\n            href=\"${recipe.sourceurl}\"\n            target=\"_blank\"\n          >\n            <span>Directions</span>\n            <svg class=\"search__icon\">\n              <use href=\"src/img/icons.svg#icon-arrow-right\"></use>\n            </svg>\n          </a>\n        </div>\n        \n        `;\n        recipeContainer.innerHTML = ' ';\n        recipeContainer.insertAdjacentHTML('afterbegin', markup);\n        \n    } catch (err){\n        alert(err);\n    }\n};\nshowRecipe();\n\n\nconsole.log(`hello`);\n"],"names":[],"version":3,"file":"index.62406edb.js.map","sourceRoot":"/__parcel_source_root/"}